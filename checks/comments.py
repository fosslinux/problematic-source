import os

from checks.base import Checker
from problem import Problem, Severity

class CommentsChecker(Checker):
    SUSPICIOUS = [
        "do not modify this file",
        "do not edit this file",
        "do not edit by hand",
        "do not modify by hand",
        "do not edit!",
        "do not modify!",
        "do not edit.",
        "do not modify.",
        "file was generated",
        "this was generated",
        "it was generated",
        "file is generated",
        "this is generated",
        "it is generated",
        "file is automatically generated",
        "this is automatically generated",
        "it is automatically generated",
        "automatically generated by",
        "machine generated",
    ]

    STARTSWITH_FILENAME_WHITELIST = [
        "Changelog",
        "ChangeLog",
    ]

    # Checks for common strings that indicate generated files
    def execute(self, file: str) -> Problem | None:
        for name in self.STARTSWITH_FILENAME_WHITELIST:
            if file.startswith(name):
                return None

        with open(file, "rb") as f:
            text = f.read()
            for string in self.SUSPICIOUS:
                for variant in [string, string.capitalize(), string.upper()]:
                    if variant.encode("utf-8") in text:
                        return Problem(Severity.WARN, f"{variant} may indicate this file is generated")
        return None
