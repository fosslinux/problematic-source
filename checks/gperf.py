import os

from checks.base import Checker
from problem import Problem, Severity
from util import get_mime

class GperfChecker(Checker):
    MAGIC = 0x9E7F

    def execute(self, file: str) -> Problem | None:
        if file.endswith(".h") or file.endswith(".c") or get_mime(file) == "text/x-c" or self._text_deep(file):
            with open(file, "rb") as f:
                if b"produced by gperf" in f.read():
                    return Problem(Severity.ERROR, "generated by gperf", file, self.MAGIC)
        for ext in [".c", ".h"]:
            gperf = file.removesuffix(ext) + ".gperf"
            if file.endswith(ext) and os.path.isfile(gperf):
                return Problem(Severity.WARN, f"likely generated from {gperf} by gperf", file, self.MAGIC)
