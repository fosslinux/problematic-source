import os
import magic

from checks.base import Checker
from problem import Problem, Severity

class GperfChecker(Checker):
    def execute(self, file: str) -> Problem | None:
        mime = magic.from_file(file, mime=True)
        if file.endswith(".h") or file.endswith(".c") or mime == "text/x-c" or self._text_deep(file):
            with open(file, "rb") as f:
                if b"produced by gperf" in f.read():
                    return Problem(Severity.ERROR, "generated by gperf")
        for ext in [".c", ".h"]:
            gperf = file.removesuffix(ext) + ".gperf"
            if file.endswith(ext) and os.path.isfile(gperf):
                return Problem(Severity.WARN, f"likely generated from {gperf} by gperf")
